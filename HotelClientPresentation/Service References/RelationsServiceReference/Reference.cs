//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotelClientPresentation.RelationsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParentChildDto", Namespace="http://schemas.datacontract.org/2004/07/HotelISDTO")]
    [System.SerializableAttribute()]
    public partial class ParentChildDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChildFirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChildIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChildLastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChildPassportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentFirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentLastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentPassportField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChildFirstname {
            get {
                return this.ChildFirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildFirstnameField, value) != true)) {
                    this.ChildFirstnameField = value;
                    this.RaisePropertyChanged("ChildFirstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChildId {
            get {
                return this.ChildIdField;
            }
            set {
                if ((this.ChildIdField.Equals(value) != true)) {
                    this.ChildIdField = value;
                    this.RaisePropertyChanged("ChildId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChildLastname {
            get {
                return this.ChildLastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildLastnameField, value) != true)) {
                    this.ChildLastnameField = value;
                    this.RaisePropertyChanged("ChildLastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChildPassport {
            get {
                return this.ChildPassportField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildPassportField, value) != true)) {
                    this.ChildPassportField = value;
                    this.RaisePropertyChanged("ChildPassport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentFirstname {
            get {
                return this.ParentFirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentFirstnameField, value) != true)) {
                    this.ParentFirstnameField = value;
                    this.RaisePropertyChanged("ParentFirstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentLastname {
            get {
                return this.ParentLastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentLastnameField, value) != true)) {
                    this.ParentLastnameField = value;
                    this.RaisePropertyChanged("ParentLastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentPassport {
            get {
                return this.ParentPassportField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentPassportField, value) != true)) {
                    this.ParentPassportField = value;
                    this.RaisePropertyChanged("ParentPassport");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponceDto", Namespace="http://schemas.datacontract.org/2004/07/HotelISDTO")]
    [System.SerializableAttribute()]
    public partial class ServiceResponceDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOperationSuccessfulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntryId {
            get {
                return this.EntryIdField;
            }
            set {
                if ((this.EntryIdField.Equals(value) != true)) {
                    this.EntryIdField = value;
                    this.RaisePropertyChanged("EntryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOperationSuccessful {
            get {
                return this.IsOperationSuccessfulField;
            }
            set {
                if ((this.IsOperationSuccessfulField.Equals(value) != true)) {
                    this.IsOperationSuccessfulField = value;
                    this.RaisePropertyChanged("IsOperationSuccessful");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RelationsServiceReference.IRelationsDataService")]
    public interface IRelationsDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelationsDataService/AddParentChildRelation", ReplyAction="http://tempuri.org/IRelationsDataService/AddParentChildRelationResponse")]
        HotelClientPresentation.RelationsServiceReference.ServiceResponceDto AddParentChildRelation(HotelClientPresentation.RelationsServiceReference.ParentChildDto relation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelationsDataService/DeleteParentChildRelation", ReplyAction="http://tempuri.org/IRelationsDataService/DeleteParentChildRelationResponse")]
        HotelClientPresentation.RelationsServiceReference.ServiceResponceDto DeleteParentChildRelation(HotelClientPresentation.RelationsServiceReference.ParentChildDto relation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelationsDataService/GetParentChildRelations", ReplyAction="http://tempuri.org/IRelationsDataService/GetParentChildRelationsResponse")]
        System.Data.DataTable GetParentChildRelations(HotelClientPresentation.RelationsServiceReference.ParentChildDto relation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRelationsDataServiceChannel : HotelClientPresentation.RelationsServiceReference.IRelationsDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RelationsDataServiceClient : System.ServiceModel.ClientBase<HotelClientPresentation.RelationsServiceReference.IRelationsDataService>, HotelClientPresentation.RelationsServiceReference.IRelationsDataService {
        
        public RelationsDataServiceClient() {
        }
        
        public RelationsDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RelationsDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelationsDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelationsDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HotelClientPresentation.RelationsServiceReference.ServiceResponceDto AddParentChildRelation(HotelClientPresentation.RelationsServiceReference.ParentChildDto relation) {
            return base.Channel.AddParentChildRelation(relation);
        }
        
        public HotelClientPresentation.RelationsServiceReference.ServiceResponceDto DeleteParentChildRelation(HotelClientPresentation.RelationsServiceReference.ParentChildDto relation) {
            return base.Channel.DeleteParentChildRelation(relation);
        }
        
        public System.Data.DataTable GetParentChildRelations(HotelClientPresentation.RelationsServiceReference.ParentChildDto relation) {
            return base.Channel.GetParentChildRelations(relation);
        }
    }
}
